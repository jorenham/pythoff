from collections.abc import Callable as Def
from typing import Concatenate as Concat

def noop[T](x: T, /) -> T: ...
def concat[S: (str, bytes)](left: S, right: S) -> S: ...
def curry[X, **Theta, Y](f: Def[Concat[X, Theta], Y], /) -> Def[[X], Def[Theta, Y]]: ...
